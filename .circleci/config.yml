version: 2.1

jobs:

  build_and_test:
    docker:
      - image: circleci/node:10.18.1@sha256:8230f70c03b6ecf521a34125fb090ec4b47068205454e5820859c00260c9bd23
    working_directory: ~/FirefoxColor
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: sudo npm install -g npm@latest
      - run: sudo npm install -g greenkeeper-lockfile@1
      - run: greenkeeper-lockfile-update
      - run: npm ci
      - run: greenkeeper-lockfile-upload
      - run: bash ./gen-environment.sh >> $BASH_ENV
      - run: npm run lint
      - run: npm run build
      - run: |
          # "web-ext build" fails to run if these environment variables are set - https://github.com/mozilla/web-ext/issues/793
          unset WEB_EXT_API_KEY
          unset WEB_EXT_API_SECRET
          npm run xpi
      - run: npm run validate
      - run: npm run test
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths:
            - ./*

  deploy_development:
    docker:
      - image: circleci/node:10.18.1@sha256:8230f70c03b6ecf521a34125fb090ec4b47068205454e5820859c00260c9bd23
    working_directory: ~/FirefoxColor
    steps:
      - attach_workspace:
          at: .
      - run: git config --global user.email "lorchard@mozilla.com"
      - run: git config --global user.name "Les Orchard"
      - run: npm run deploy

  deploy_to_aws:
    parameters:
      access-key-id:
        type: env_var_name
      bucket-name:
        type: env_var_name
      distribution-id:
        type: env_var_name
      secret-access-key:
        type: env_var_name
    docker:
      - image: circleci/python:3
    working_directory: ~/FirefoxColor
    environment:
      ACCESS_KEY_ID: << parameters.access-key-id >>
      SECRET_ACCESS_KEY: << parameters.secret-access-key >>
    steps:
      - attach_workspace:
          at: .
      - run:
          command: |
            sudo pip install awscli
            export AWS_ACCESS_KEY_ID=${!ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${!SECRET_ACCESS_KEY}
            aws s3 sync --exclude __version__ build/web/ s3://${<< parameters.bucket-name >>}/ --delete
            aws s3 cp --content-type application/json build/web/__version__ s3://${<< parameters.bucket-name >>}/__version__
            aws cloudfront create-invalidation --distribution-id ${<< parameters.distribution-id >>} --paths '/*'

workflows:
  test_and_deploy:
    jobs:
      - build_and_test
      - deploy_development:
          requires:
            - build_and_test
          filters:
            branches:
              only: development
      - deploy_to_aws:
          access-key-id: STAGE_ACCESS_KEY_ID
          bucket-name: STAGE_BUCKET_NAME
          distribution-id: STAGE_DISTRIBUTION_ID
          secret-access-key: STAGE_SECRET_ACCESS_KEY
          requires:
            - build_and_test
          filters:
            branches:
              only: stage
      - deploy_to_aws:
          access-key-id: PROD_ACCESS_KEY_ID
          bucket-name: PROD_BUCKET_NAME
          distribution-id: PROD_DISTRIBUTION_ID
          secret-access-key: PROD_SECRET_ACCESS_KEY
          requires:
            - build_and_test
          filters:
            branches:
              only: production
